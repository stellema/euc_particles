base:INFO:Executing: 1981-01-01 00:00:00 to 1981-12-31 00:00:00
base:INFO:Runtime: 364 days
base:INFO:Timestep (dt): 240 minutes
base:INFO:Output (dt): 1 days
base:INFO:Repeat release: 6 days
base:INFO:Depths: 14 dz=25 [25 to 350]
base:INFO:Latitudes: 14 dy=0.4 [-2.6 to 2.6]
base:INFO:Longitudes: 1 [190]
base:INFO:Particles (/repeatdt): 196
base:INFO:Particles (total): 11760
base:INFO:Time decorator used.
--- Logging error ---
Traceback (most recent call last):
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 1025, in emit
    msg = self.format(record)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 869, in format
    return fmt.format(record)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 608, in format
    record.message = record.getMessage()
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 369, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/g/data/e14/as3189/OFAM/scripts/base.py", line 121, in <module>
    add_transport=args.transport, write_fieldset=args.fieldset)
  File "/g/data/e14/as3189/OFAM/scripts/tools.py", line 121, in timed
    result = method(*args, **kw)
  File "/g/data/e14/as3189/OFAM/scripts/base.py", line 69, in run_EUC
    logger.info('Fieldset import method.', field_method)
Message: 'Fieldset import method.'
Arguments: ('netcdf',)
--- Logging error ---
Traceback (most recent call last):
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 1025, in emit
    msg = self.format(record)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 869, in format
    return fmt.format(record)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 608, in format
    record.message = record.getMessage()
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/logging/__init__.py", line 369, in getMessage
    msg = msg % self.args
TypeError: not all arguments converted during string formatting
Call stack:
  File "/g/data/e14/as3189/OFAM/scripts/base.py", line 121, in <module>
    add_transport=args.transport, write_fieldset=args.fieldset)
  File "/g/data/e14/as3189/OFAM/scripts/tools.py", line 121, in timed
    result = method(*args, **kw)
  File "/g/data/e14/as3189/OFAM/scripts/base.py", line 69, in run_EUC
    logger.info('Fieldset import method.', field_method)
Message: 'Fieldset import method.'
Arguments: ('netcdf',)
WARNING: Casting lon data to np.float32
WARNING: Casting lat data to np.float32
WARNING: Casting depth data to np.float32
base:INFO:ofam_fieldset: 0:0:13.06 total: 13.06 seconds.
base:INFO:ParticleFile_1981-1981_v1i: Started.
WARNING: Did not find sw_ocean in NetCDF dims. Please specifiy field_chunksize as dictionary for NetCDF dimension names, e.g.
 field_chunksize={ 'sw_ocean': <number>, ... }.
Traceback (most recent call last):
  File "/g/data/e14/as3189/OFAM/scripts/base.py", line 121, in <module>
    add_transport=args.transport, write_fieldset=args.fieldset)
  File "/g/data/e14/as3189/OFAM/scripts/tools.py", line 121, in timed
    result = method(*args, **kw)
  File "/g/data/e14/as3189/OFAM/scripts/base.py", line 76, in run_EUC
    remove_westward=True)
  File "/g/data/e14/as3189/OFAM/scripts/tools.py", line 121, in timed
    result = method(*args, **kw)
  File "/g/data/e14/as3189/OFAM/scripts/main.py", line 239, in EUC_particles
    pset_start, repeatdt)
  File "/g/data/e14/as3189/OFAM/scripts/tools.py", line 121, in timed
    result = method(*args, **kw)
  File "/g/data/e14/as3189/OFAM/scripts/main.py", line 188, in EUC_pset
    time=pset_start, repeatdt=repeatdt)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/particleset.py", line 177, in __init__
    self.particles[i] = pclass(lon[i], lat[i], pid[i], fieldset=fieldset, depth=depth[i], cptr=cptr(i), time=time[i])
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/particle.py", line 242, in __init__
    super(JITParticle, self).__init__(*args, **kwargs)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/particle.py", line 187, in __init__
    super(ScipyParticle, self).__init__()
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/particle.py", line 131, in __init__
    v.initial.fieldset.computeTimeChunk(time, 0)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/fieldset.py", line 789, in computeTimeChunk
    data = f.computeTimeChunk(data, tind)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/field.py", line 1129, in computeTimeChunk
    buffer_data = filebuffer.data
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/field.py", line 1793, in data
    return self.data_access()
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/parcels/field.py", line 1870, in data_access
    data = data.rechunk(self.chunk_mapping)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/dask/array/core.py", line 2192, in rechunk
    return rechunk(self, chunks, threshold, block_size_limit)
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/dask/array/rechunk.py", line 224, in rechunk
    chunks = {validate_axis(c, x.ndim): v for c, v in chunks.items()}
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/dask/array/rechunk.py", line 224, in <dictcomp>
    chunks = {validate_axis(c, x.ndim): v for c, v in chunks.items()}
  File "/g/data3/hh5/public/apps/miniconda3/envs/analysis3-20.01/lib/python3.7/site-packages/dask/array/utils.py", line 345, in validate_axis
    "Axis %d is out of bounds for array of dimension %d" % (axis, ndim)
numpy.AxisError: Axis 3 is out of bounds for array of dimension 3
